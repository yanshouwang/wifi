// Autogenerated by jnigen. DO NOT EDIT!

// ignore_for_file: annotate_overrides
// ignore_for_file: argument_type_not_assignable
// ignore_for_file: camel_case_extensions
// ignore_for_file: camel_case_types
// ignore_for_file: constant_identifier_names
// ignore_for_file: doc_directive_unknown
// ignore_for_file: file_names
// ignore_for_file: inference_failure_on_untyped_parameter
// ignore_for_file: invalid_internal_annotation
// ignore_for_file: invalid_use_of_internal_member
// ignore_for_file: library_prefixes
// ignore_for_file: lines_longer_than_80_chars
// ignore_for_file: no_leading_underscores_for_library_prefixes
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: only_throw_errors
// ignore_for_file: overridden_fields
// ignore_for_file: prefer_double_quotes
// ignore_for_file: unintended_html_in_doc_comment
// ignore_for_file: unnecessary_cast
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: unused_element
// ignore_for_file: unused_field
// ignore_for_file: unused_import
// ignore_for_file: unused_local_variable
// ignore_for_file: unused_shown_name
// ignore_for_file: use_super_parameters

import 'dart:core' show Object, String, bool, double, int;
import 'dart:core' as _$core;

import 'package:jni/_internal.dart' as _$jni;
import 'package:jni/jni.dart' as _$jni;

import '../../../android/content/Context.dart' as context_;

import '../../../android/content/Intent.dart' as intent_;

/// from: `dev.hebei.wifi.BroadcastReceiverImpl$Callback`
class BroadcastReceiverImpl_Callback extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<BroadcastReceiverImpl_Callback> $type;

  @_$jni.internal
  BroadcastReceiverImpl_Callback.fromReference(
    _$jni.JReference reference,
  )   : $type = type,
        super.fromReference(reference);

  static final _class =
      _$jni.JClass.forName(r'dev/hebei/wifi/BroadcastReceiverImpl$Callback');

  /// The type which includes information such as the signature of this class.
  static const type = $BroadcastReceiverImpl_Callback$Type();
  static final _id_onReceive = _class.instanceMethodId(
    r'onReceive',
    r'(Landroid/content/Context;Landroid/content/Intent;)V',
  );

  static final _onReceive = _$jni.ProtectedJniExtensions.lookup<
          _$jni.NativeFunction<
              _$jni.JThrowablePtr Function(
                  _$jni.Pointer<_$jni.Void>,
                  _$jni.JMethodIDPtr,
                  _$jni.VarArgs<
                      (
                        _$jni.Pointer<_$jni.Void>,
                        _$jni.Pointer<_$jni.Void>
                      )>)>>('globalEnv_CallVoidMethod')
      .asFunction<
          _$jni.JThrowablePtr Function(
              _$jni.Pointer<_$jni.Void>,
              _$jni.JMethodIDPtr,
              _$jni.Pointer<_$jni.Void>,
              _$jni.Pointer<_$jni.Void>)>();

  /// from: `public abstract void onReceive(android.content.Context context, android.content.Intent intent)`
  void onReceive(
    context_.Context context,
    intent_.Intent intent,
  ) {
    _onReceive(reference.pointer, _id_onReceive as _$jni.JMethodIDPtr,
            context.reference.pointer, intent.reference.pointer)
        .check();
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $BroadcastReceiverImpl_Callback> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
      if ($d ==
          r'onReceive(Landroid/content/Context;Landroid/content/Intent;)V') {
        _$impls[$p]!.onReceive(
          $a[0].as(const context_.$Context$Type(), releaseOriginal: true),
          $a[1].as(const intent_.$Intent$Type(), releaseOriginal: true),
        );
        return _$jni.nullptr;
      }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $BroadcastReceiverImpl_Callback $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'dev.hebei.wifi.BroadcastReceiverImpl$Callback',
      $p,
      _$invokePointer,
      [
        if ($impl.onReceive$async)
          r'onReceive(Landroid/content/Context;Landroid/content/Intent;)V',
      ],
    );
    final $a = $p.sendPort.nativePort;
    _$impls[$a] = $impl;
  }

  factory BroadcastReceiverImpl_Callback.implement(
    $BroadcastReceiverImpl_Callback $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return BroadcastReceiverImpl_Callback.fromReference(
      $i.implementReference(),
    );
  }
}

abstract base mixin class $BroadcastReceiverImpl_Callback {
  factory $BroadcastReceiverImpl_Callback({
    required void Function(context_.Context context, intent_.Intent intent)
        onReceive,
    bool onReceive$async,
  }) = _$BroadcastReceiverImpl_Callback;

  void onReceive(context_.Context context, intent_.Intent intent);
  bool get onReceive$async => false;
}

final class _$BroadcastReceiverImpl_Callback
    with $BroadcastReceiverImpl_Callback {
  _$BroadcastReceiverImpl_Callback({
    required void Function(context_.Context context, intent_.Intent intent)
        onReceive,
    this.onReceive$async = false,
  }) : _onReceive = onReceive;

  final void Function(context_.Context context, intent_.Intent intent)
      _onReceive;
  final bool onReceive$async;

  void onReceive(context_.Context context, intent_.Intent intent) {
    return _onReceive(context, intent);
  }
}

final class $BroadcastReceiverImpl_Callback$Type
    extends _$jni.JObjType<BroadcastReceiverImpl_Callback> {
  @_$jni.internal
  const $BroadcastReceiverImpl_Callback$Type();

  @_$jni.internal
  @_$core.override
  String get signature => r'Ldev/hebei/wifi/BroadcastReceiverImpl$Callback;';

  @_$jni.internal
  @_$core.override
  BroadcastReceiverImpl_Callback fromReference(_$jni.JReference reference) =>
      BroadcastReceiverImpl_Callback.fromReference(reference);

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($BroadcastReceiverImpl_Callback$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($BroadcastReceiverImpl_Callback$Type) &&
        other is $BroadcastReceiverImpl_Callback$Type;
  }
}

/// from: `dev.hebei.wifi.BroadcastReceiverImpl`
class BroadcastReceiverImpl extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<BroadcastReceiverImpl> $type;

  @_$jni.internal
  BroadcastReceiverImpl.fromReference(
    _$jni.JReference reference,
  )   : $type = type,
        super.fromReference(reference);

  static final _class =
      _$jni.JClass.forName(r'dev/hebei/wifi/BroadcastReceiverImpl');

  /// The type which includes information such as the signature of this class.
  static const type = $BroadcastReceiverImpl$Type();
  static final _id_new$ = _class.constructorId(
    r'(Ldev/hebei/wifi/BroadcastReceiverImpl$Callback;)V',
  );

  static final _new$ = _$jni.ProtectedJniExtensions.lookup<
              _$jni.NativeFunction<
                  _$jni.JniResult Function(
                      _$jni.Pointer<_$jni.Void>,
                      _$jni.JMethodIDPtr,
                      _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>(
          'globalEnv_NewObject')
      .asFunction<
          _$jni.JniResult Function(_$jni.Pointer<_$jni.Void>,
              _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();

  /// from: `public void <init>(dev.hebei.wifi.BroadcastReceiverImpl$Callback callback)`
  /// The returned object must be released after use, by calling the [release] method.
  factory BroadcastReceiverImpl(
    BroadcastReceiverImpl_Callback callback,
  ) {
    return BroadcastReceiverImpl.fromReference(_new$(_class.reference.pointer,
            _id_new$ as _$jni.JMethodIDPtr, callback.reference.pointer)
        .reference);
  }

  static final _id_onReceive = _class.instanceMethodId(
    r'onReceive',
    r'(Landroid/content/Context;Landroid/content/Intent;)V',
  );

  static final _onReceive = _$jni.ProtectedJniExtensions.lookup<
          _$jni.NativeFunction<
              _$jni.JThrowablePtr Function(
                  _$jni.Pointer<_$jni.Void>,
                  _$jni.JMethodIDPtr,
                  _$jni.VarArgs<
                      (
                        _$jni.Pointer<_$jni.Void>,
                        _$jni.Pointer<_$jni.Void>
                      )>)>>('globalEnv_CallVoidMethod')
      .asFunction<
          _$jni.JThrowablePtr Function(
              _$jni.Pointer<_$jni.Void>,
              _$jni.JMethodIDPtr,
              _$jni.Pointer<_$jni.Void>,
              _$jni.Pointer<_$jni.Void>)>();

  /// from: `public void onReceive(android.content.Context context, android.content.Intent intent)`
  void onReceive(
    context_.Context context,
    intent_.Intent intent,
  ) {
    _onReceive(reference.pointer, _id_onReceive as _$jni.JMethodIDPtr,
            context.reference.pointer, intent.reference.pointer)
        .check();
  }
}

final class $BroadcastReceiverImpl$Type
    extends _$jni.JObjType<BroadcastReceiverImpl> {
  @_$jni.internal
  const $BroadcastReceiverImpl$Type();

  @_$jni.internal
  @_$core.override
  String get signature => r'Ldev/hebei/wifi/BroadcastReceiverImpl;';

  @_$jni.internal
  @_$core.override
  BroadcastReceiverImpl fromReference(_$jni.JReference reference) =>
      BroadcastReceiverImpl.fromReference(reference);

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($BroadcastReceiverImpl$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($BroadcastReceiverImpl$Type) &&
        other is $BroadcastReceiverImpl$Type;
  }
}
